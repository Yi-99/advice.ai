// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Advisor {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  config    String
  data      String?
  chatCount Int      @default(0)
  createdBy String?

  Chat Chat[]
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Chat Chat[]
}

model Chat {
  id        String   @id @default(cuid())
  userId    String
  advisorId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  advisor Advisor @relation(fields: [advisorId], references: [id])

  Response Response[]

  Prompt Prompt[]
}

model Prompt {
  id        String   @id @default(cuid())
  chatId    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chat Chat @relation(fields: [chatId], references: [id])
}

model Response {
  id        String   @id @default(cuid())
  chatId    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chat Chat @relation(fields: [chatId], references: [id])
}
